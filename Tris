//
//  main.c
//  Tris Ottimizzato
//
//  Created by Antonio Sterlicchio on 29/10/13.
//  Copyright (c) 2013 Antonio Sterlicchio. All rights reserved.
//


#include <stdio.h>
#include <stdlib.h>

void inizializza (int tris[3][3]);              //imposta la matrice sui valori 0,0
void giocatore(int tris[3][3], int player);
void visualizza (int tris[3][3]);               //stampa della matrice dopo ogni mossa
int controllo (int tris[3][3], int player);     //controllo matrice dopo ogni mossa


int main(int argc, const char * argv[])
{
    int turno=0, player=1, vincitore=0;
    int tris[3][3];                             //dichiarazione matrice
    inizializza (tris);
    
    visualizza (tris);
    
    for(turno=1; turno<10; turno++)             //avvio del gioco
    {
        if ((turno%2)==1)
        {
            giocatore(tris, player=1);
            visualizza (tris);
            vincitore=controllo(tris, player);
        }
        else
        {
            giocatore(tris, player=2);
            visualizza (tris);
            vincitore=controllo(tris, player);
        }
        
        if (vincitore>0)                    //risultato partita
        {
            printf ("\n\nIl giocatore %d ha vinto!\n", player);
            break;
        }
        
    }
    if (vincitore==0)
        printf("\n\nLa partita è terminata con un pareggio!\n\n");
}


void inizializza (int tris[3][3])
{
    int r=0, c=0;
    for (r=0; r<3; r++)
        for (c=0; c<3; c++)
            (tris[r][c]=0);
    
    printf ("Partita iniziata!");
    
    return;
}



void giocatore(int tris[3][3], int player)
{
    int r=0, c=0;           //posizioni nella tabella
    
    printf ("\n\nGiocatore %d\nOccupa la riga: ", player);
    scanf ("%d", &r);
    
    printf ("e la colonna: ");
    scanf ("%d", &c);
    
    while (tris[r-1][c-1]==0)           //inserimento mossa del giocatore
    {
        if (player==1)
            tris[r-1][c-1]=1;
        if (player==2)
            tris[r-1][c-1]=2;
        
        return;
    }
    
    printf ("\nATTENZIONE: posizione già occupata!\n");
    giocatore(tris, player);
}



void visualizza (int tris[3][3])
{
    int r=0, c=0;
    
    for (r=0; r<3; r++)
    {
        printf ("\n");
        for (c=0; c<3; c++)
        {
            if (tris[r][c]==0)
                printf ("[ ]");
            if (tris[r][c]==1)
                printf ("[X]");
            if (tris[r][c]==2)
                printf ("[O]");
        }
    }
    return;
}



int controllo (int tris[3][3], int player)
{
    int r=0, c=0;
    
    //controllo righe
    while (r<3)
    {
        if ((tris[r][c]==tris[r][c+1] && tris[r][c]==tris[r][c+2] && (tris[r][c]>0)))
        {
            printf ("\n\nTris sulla %da riga", r+1);
            return (player);
        }
        else
            r++;
    }
    
    //controllo colonne
    r=0, c=0;
    while (c<3)
    {
        if ((tris[r][c]==tris[r+1][c] && (tris[r][c]==tris[r+2][c]) && (tris[r][c]>0)))
        {
            printf ("\n\nTris sulla %da colonna", c+1);
            return (player);
        }
        else
            c++;
    }
    
    
    //controllo diagonali
    r=0;
    if ((tris[r][r]==tris[r+1][r+1]) && (tris[r][r]==tris[r+2][r+2]) && (tris[r][r]>0))
    {
        printf ("Tris diagonale");
        return (player);
    }
    
    r=0, c=3;
    if ((tris[r][c]==tris[r+1][c-1]) && (tris[r][c]==tris[r+2][c-2]) && (tris[r][c]>0))
    {
        printf ("Tris diagonale");
        return (player);
    }
    
    return (0);
}























